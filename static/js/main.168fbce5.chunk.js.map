{"version":3,"sources":["components/Logo.js","context/AppProvider.js","components/SearchBar.js","components/NavigationLinks.js","components/NavigationMenu.js","layout/Navigation.js","layout/Header.js","components/ForecastTile.js","pages/ForecastPage.js","components/WeatherTile.js","pages/WeatherPage.js","pages/UVIndex.js","pages/content/MapStyle.js","components/Map.js","components/MapTileButton.js","components/MapTileMenu.js","components/WeatherMap.js","pages/MapPage.js","pages/WeatherAlerts.js","layout/Page.js","layout/Footer.js","layout/App.js","index.js"],"names":["Logo","props","style","display","isHidden","window","innerWidth","className","AppContext","React","createContext","AppProvider","state","city","setCity","currentCity","setState","Provider","value","this","children","Component","SearchBar","handleChange","e","target","handleSubmit","preventDefault","Consumer","context","onSubmit","type","onChange","placeholder","icon","faSearch","NavigationLinks","to","NavigationMenu","isOpen","isChecked","handleChecked","checked","open","faAngleUp","faAngleDown","id","onClick","htmlFor","Navigation","scrolling","handleScroll","scrollY","addEventListener","removeEventListener","color","position","top","right","width","zIndex","paddingTop","Header","data","backgroundImage","fetchData","a","API","encodeURIComponent","fetch","response","json","then","hits","largeImageURL","catch","console","log","error","componentDidUpdate","prevProps","prevState","setBackgroundImage","contextType","ForecastTile","main","dt_txt","weather","minTemp","temp_min","toFixed","maxTemp","temp_max","data-aos","data-aos-duration","src","alt","description","pressure","humidity","ForecastPage","forecastLength","ok","Error","statusText","err","alert","forecastOptions","handleClick","option","forecastStart","forecastEnd","data-aos-delay","data-aos-easing","map","key","list","slice","day","dt","WeatherTile","sys","visibility","wind","clouds","temp","unixSunrise","sunrise","unixSunset","sunset","sunriseTime","Date","toLocaleTimeString","sunsetTime","vision","windDirection","windDegrees","deg","getWindDirection","all","faArrowUp","speed","faSun","faMoon","WeatherPage","resp","url","UVIndex","MapStyle","mapStyles","maxWidth","height","margin","CurrentLocation","addMarker","location","google","marker","maps","Marker","infowindow","InfoWindow","content","toUpperCase","addListener","initialCenter","lat","lng","currentLocation","loadMap","recenterMap","mapRef","refs","node","ReactDOM","findDOMNode","zoom","selectedMapType","center","LatLng","mapConfig","Object","assign","maxZoom","minZoom","styles","Map","mapType","ImageMapType","getTileUrl","coord","x","y","tileSize","Size","name","opacity","overlayMapTypes","insertAt","current","panTo","Children","c","cloneElement","mapCenter","ref","renderChildren","defaultProps","centerAroundCurrentLocation","visible","MapTileButton","itemId","buttonText","MapTileMenu","isVisible","WeatherMap","currentCords","lon","menu","mapTypes","handleMapTypeChange","GoogleApiWrapper","apiKey","MapPage","WeatherAlerts","Page","currentPage","document","pathname","routes","path","component","C","exact","render","Footer","App","AOS","init","getElementById"],"mappings":"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","file":"static/js/main.168fbce5.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/Logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return (<div style={{ display: (props.isHidden && window.innerWidth < 768) ? 'none' : 'inline-block' }} className=\"logo\">Weatherly</div>);\r\n}\r\n\r\nexport default Logo;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport class AppProvider extends Component {\r\n    state = {\r\n        city: '',\r\n    }\r\n\r\n    setCity = (currentCity) => {\r\n        if (this.state.city !== currentCity) {\r\n            this.setState({ city: currentCity }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <AppContext.Provider value={\r\n                {\r\n                    state: this.state,\r\n                    setCity: this.setCity,\r\n                }\r\n            } >\r\n                {this.props.children}\r\n            </ AppContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport '../styles/SearchBar.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { AppContext } from '../context/AppProvider';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: \"\",\r\n        city: \"\",\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            value: \"\",\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Consumer>\r\n                {(context) => (\r\n                    <form onSubmit={(e) => { context.setCity(this.state.value); this.handleSubmit(e) }} className=\"searchbar\">\r\n                        <input type=\"text\" className=\"searchbar__input\" value={this.state.value} onChange={this.handleChange} placeholder=\"enter the city\" />\r\n                        <button type=\"submit\" className=\"searchbar__submit\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                    </form>\r\n                )\r\n                }\r\n            </AppContext.Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Navi.scss'\r\n\r\nconst NavigationLinks = () => {\r\n\r\n    return (\r\n        <ul className=\"navi navi__list\">\r\n            <li><NavLink to=\"/WeatherPage\">Current Weather</NavLink ></li>\r\n            <li><NavLink to=\"/ForecastPage\">5-days Forecast</NavLink></li>\r\n            <li><NavLink to=\"/MapPage\">Weather Map</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavigationLinks;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass NavigationMenu extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        isChecked: false\r\n    }\r\n\r\n    handleChecked = () => {\r\n        let checked = this.state.isChecked;\r\n        this.setState({ isChecked: !checked });\r\n    }\r\n\r\n    handleChange = () => {\r\n        let open = this.state.isOpen;\r\n        this.setState({ isOpen: !open });\r\n    }\r\n\r\n    render() {\r\n        let icon = this.state.isOpen ? faAngleUp : faAngleDown;\r\n        return (\r\n            <>\r\n                <input onChange={this.handleChange} checked={this.state.isChecked} type=\"checkbox\" id=\"navigationMenu\" />\r\n                <label onClick={this.handleChecked} htmlFor=\"navigationMenu\" className=\"navigation__iconbox\"><button className=\"navigation__menu\"><FontAwesomeIcon icon={icon} /></button></label>\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationMenu;","import React from 'react';\r\nimport '../styles/Navigation.scss'\r\nimport Logo from '../components/Logo';\r\nimport SearchBar from '../components/SearchBar';\r\nimport NavigationLinks from '../components/NavigationLinks';\r\nimport NavigationMenu from '../components/NavigationMenu';\r\n\r\nclass Navigation extends React.Component {\r\n\r\n    state = {\r\n        scrolling: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = (e) => {\r\n        if (window.scrollY === 0 && this.state.scrolling === true) {\r\n            this.setState({ scrolling: false });\r\n        }\r\n        else if (window.scrollY > 400 && this.state.scrolling !== true) {\r\n            this.setState({ scrolling: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"navigation\" style={{ color: '#06DCD6', position: this.state.scrolling ? 'fixed' : 'relative', top: 0, right: 0, width: '100%', zIndex: 1, paddingTop: '10px' }}>\r\n            <Logo isHidden={this.state.scrolling} />\r\n            <NavigationMenu />\r\n            <NavigationLinks />\r\n            <SearchBar />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport '../styles/Header.scss'\r\nimport { AppContext } from '../context/AppProvider';\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        data: 'Warsaw',\r\n        backgroundImage: 'https://pixabay.com/get/50e9d5414351b108f5d084609629337c173bd7e3564c704c722b7bdd9f49c15a_1280.jpg',\r\n    }\r\n\r\n    static contextType = AppContext;\r\n\r\n    fetchData = async () => {\r\n        let city = this.context.state.city;\r\n        let API = `https://pixabay.com/api/?key=14224965-dab17cccdd274b0be1640d311&q=${encodeURIComponent(city)}&image_type=photo&pretty=true`;\r\n        const response = await fetch(API);\r\n        await response.json()\r\n            .then(data => this.setState({\r\n                data: data,\r\n                backgroundImage: data.hits[0].largeImageURL,\r\n            }))\r\n\r\n            .catch(() => console.log(this.state.error))\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.data === prevState.data) {\r\n            this.fetchData();\r\n\r\n        }\r\n    }\r\n\r\n\r\n    setBackgroundImage = () => {\r\n        this.setState({ backgroundImage: this.state.data.hits[0].largeImageURL });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.context.state.city) {\r\n            return (\r\n\r\n                <div className=\"header\" style={{ backgroundImage: `url(${this.state.backgroundImage})` }}><div className=\"header__filter\">{`${this.context.state.city}`}</div></div>\r\n            );\r\n        } else return (\r\n            <div className=\"header header--default\"><div className=\"header__filter\">Welcome to Weatherly - the best weather app ever!</div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst ForecastTile = (props) => {\r\n\r\n    const { main, dt_txt, weather, } = props.data;\r\n    const minTemp = (main.temp_min - 273.15).toFixed(1);\r\n    const maxTemp = (main.temp_max - 273.15).toFixed(1);\r\n\r\n    return (<div data-aos=\"zoom-in\" data-aos-duration='1000' className=\"tile__content\">\r\n\r\n        <h3 className='tile__date'>{dt_txt}</h3>\r\n        <img className=\"tile__icon\" src={`http://openweathermap.com/img/w/${weather[0].icon}.png`} alt=\"weather-icon\" />\r\n        <h3 className='tile__description'>{weather[0].description}</h3>\r\n        <p>Temperature (min / max): {minTemp} / {maxTemp}</p>\r\n        <p>Pressure: {main.pressure}</p>\r\n        <p>Humidity: {main.humidity} %</p>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default ForecastTile;","import React, { Component } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport '../styles/ForecastPage.scss';\r\nimport '../styles/buttons.scss';\r\nimport ForecastTile from '../components/ForecastTile';\r\n\r\nclass ForecastPage extends Component {\r\n\r\n\r\n    static contextType = AppContext;\r\n\r\n\r\n    state = {\r\n        data: null,\r\n        error: 'An error occured',\r\n        forecastLength: 24,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState === this.state) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        let value = this.context;\r\n        let API = `https://api.openweathermap.org/data/2.5/forecast?q=${value.state.city}&appid=f2d74a34f19c8b461a1356213ca592fc`;\r\n        fetch(API)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText)\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => this.setState({ data: data }))\r\n            .catch((err) => alert('Invalid city name'))\r\n    }\r\n\r\n    forecastOptions = [24, 48, 72, 96, 120]\r\n\r\n    handleClick = (option) => {\r\n        this.setState({ forecastLength: option });\r\n    }\r\n\r\n    render() {\r\n        let forecastStart = ((this.state.forecastLength / 3) - ((this.state.forecastLength / 3) / (this.state.forecastLength / 24)));\r\n        let forecastEnd = (this.state.forecastLength / 3);\r\n\r\n\r\n        return (\r\n            <div className=\"forecastPage\">\r\n                <h1 data-aos=\"fade-right\" data-aos-delay=\"500\" data-aos-easing=\"ease-in-sine\" className=\"page__title\">The next {this.state.forecastLength} hours in {this.context.state.city}</h1>\r\n                <div data-aos=\"zoom-in\" data-aos-delay=\"500\" className=\"forecastPage__buttons\">{this.forecastOptions.map(option => <button className=\"button-primary button-primary--dark\" key={option + 'hours'} onClick={() => this.handleClick(option)}>{option} hours</button>)}</div>\r\n\r\n                {(this.state.data) ? <div className=\"forecastPage__content\">\r\n                    {this.state.data.list.slice(forecastStart, forecastEnd).map((day) =>\r\n                        <ForecastTile key={day.dt} data={day} />\r\n                    )}\r\n                </div> : null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForecastPage;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp, faSun, faMoon } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst WeatherTile = (props) => {\r\n    const { main, sys, visibility, wind, weather, clouds } = props.data;\r\n    const minTemp = (main.temp_min - 273.15).toFixed(1);\r\n    const maxTemp = (main.temp_max - 273.15).toFixed(1);\r\n    const temp = (main.temp - 273.15).toFixed(1);\r\n    const unixSunrise = sys.sunrise;\r\n    const unixSunset = sys.sunset;\r\n    const sunriseTime = new Date(unixSunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(unixSunset * 1000).toLocaleTimeString();\r\n    const vision = visibility / 1000\r\n    let windDirection = ''\r\n\r\n    const getWindDirection = () => {\r\n        let windDegrees = wind.deg;\r\n        if (windDegrees > 315 || windDegrees < 45) {\r\n            windDirection = 'north'\r\n        } else if (windDegrees > 45 && windDegrees < 135) {\r\n            windDirection = 'east'\r\n        } else if (windDegrees > 135 && windDegrees < 225) {\r\n            windDirection = 'south'\r\n        } else {\r\n            windDirection = 'west'\r\n        }\r\n\r\n        return windDirection\r\n\r\n    }\r\n    getWindDirection();\r\n\r\n    return (<div className=\"weatherTiles\">\r\n        <div className=\"weatherTile\">\r\n            <div data-aos=\"zoom-in\" data-aos-duration='1000' className=\"weatherTile__container weatherTile__container--column\">\r\n                <div className=\"weatherTile__current\">\r\n                    <h3 className='weatherTile__date'>Today</h3>\r\n                    <div className=\"weatherTile__weather\">\r\n                        <img className=\"weatherTile__icon--current\" src={`http://openweathermap.com/img/w/${weather[0].icon}.png`} alt=\"weather-icon\" />\r\n                        <div className=\"weatherTile__temp\">{temp}</div>\r\n                    </div>\r\n                    <h3 className='weatherTile__description'>{weather[0].description}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"weatherTile\">\r\n            <div data-aos=\"zoom-in\" data-aos-duration='1000' className=\"weatherTile__container weatherTile__container--column\">\r\n                <div className=\"weatherTile__conditions\">\r\n                    <h2>Conditions:</h2>\r\n                    <p>Temp. (min / max): {minTemp} / {maxTemp}</p>\r\n                    <p>Cloudiness: {clouds.all} %</p>\r\n                    <p>Humidity: {main.humidity} %</p>\r\n                    <p>Visibility: {vision} km</p>\r\n                    <p>Pressure: {main.pressure}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"weatherTile\">\r\n            <div data-aos=\"zoom-in\" data-aos-duration='1000' className=\"weatherTile__container weatherTile__container--column\">\r\n                <div className=\"weatherTile__wind\">\r\n                    <h2>Wind</h2>\r\n                    <div className=\"weatherTile__windbox\">\r\n                        <FontAwesomeIcon className={`tile__wind--${windDirection}`} icon={faArrowUp} />\r\n                    </div>\r\n                    <p>The wind blows from the {windDirection} with the speed of {wind.speed} m/s</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"weatherTile\">\r\n            <div data-aos=\"zoom-in\" data-aos-duration='1000' className=\"weatherTile__container weatherTile__container--column\">\r\n                <div className=\"weatherTile__time weatherTile__time--top\"><FontAwesomeIcon className=\"weatherTile__icon--sun\" icon={faSun} />\r\n                    <p className=\"weatherTile__time--sunrise\">Sunrise: {`${sunriseTime}`} </p>\r\n                </div>\r\n                <div className=\"weatherTile__time weatherTile__time--bottom\">\r\n                    <FontAwesomeIcon className=\"weatherTile__icon--moon\" icon={faMoon} />\r\n                    <p className=\"weatherTile__time--sunset\">Sunset: {`${sunsetTime}`}  </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default WeatherTile;","import React, { Component } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport '../styles/WeatherPage.scss';\r\nimport '../styles/Page.scss';\r\nimport '../styles/buttons.scss';\r\nimport WeatherTile from '../components/WeatherTile';\r\n\r\nclass WeatherPage extends Component {\r\n\r\n    static contextType = AppContext;\r\n\r\n\r\n    state = {\r\n        data: null,\r\n        error: 'An error occured',\r\n        forecastLength: 24,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState === this.state) {\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    fetchData = () => {\r\n        let value = this.context;\r\n        let API = `https://api.openweathermap.org/data/2.5/weather?q=${value.state.city}&appid=f2d74a34f19c8b461a1356213ca592fc`;\r\n        fetch(API)\r\n            .then(function (resp) {\r\n                if (!resp.ok) {\r\n                    throw Error(resp.statusText + '-' + resp.url)\r\n                }\r\n                return resp.json()\r\n            })\r\n            .then(data => this.setState({ data: data }))\r\n            .catch((err) => alert('Invalid city name'))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"weatherPage\">\r\n                <h1 data-aos=\"fade-right\" data-aos-delay=\"500\" data-aos-easing=\"ease-in-sine\" className=\"page__title\">The current weather in {this.context.state.city}</h1>\r\n\r\n                {(this.state.data) ? <div className=\"weatherPage__content\">\r\n\r\n                    <WeatherTile data={this.state.data} />\r\n\r\n                </div> : null}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherPage;","import React from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\n\r\nconst UVIndex = () => {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(context) => (\r\n                <div className=\"UVIndex\">\r\n                    uv index\r\n                </div>\r\n            )\r\n            }\r\n        </AppContext.Consumer >\r\n    )\r\n}\r\n\r\nexport default UVIndex;","\r\n\r\nconst MapStyle = [\r\n    {\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#212121\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#757575\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#212121\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#757575\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.country\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9e9e9e\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.land_parcel\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.locality\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#bdbdbd\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#757575\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#181818\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#616161\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#1b1b1b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#2c2c2c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#8a8a8a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#373737\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#3c3c3c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway.controlled_access\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#4e4e4e\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#616161\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#757575\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#000000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#3d3d3d\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default MapStyle;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MapStyle from '../pages/content/MapStyle';\r\nimport { AppContext } from '../context/AppProvider';\r\n\r\n\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    maxWidth: '1200px',\r\n    height: '35em',\r\n    margin: '0 auto'\r\n\r\n  }\r\n};\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { lat, lng } = this.props.initialCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      }\r\n    };\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  componentDidMount() {\r\n\r\n    this.loadMap();\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.initialCenter !== this.props.initialCenter) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      let { selectedMapType } = this.props;\r\n      const { lat, lng } = this.props.initialCenter;\r\n      const center = new maps.LatLng(lat, lng);\r\n\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom,\r\n          maxZoom: 6,\r\n          minZoom: 4,\r\n          styles: MapStyle\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n      // mapType determines and then adds the type of a layer on the map\r\n      let mapType = new google.maps.ImageMapType({\r\n\r\n        getTileUrl: function (coord, zoom) {\r\n          return `https://tile.openweathermap.org/map/${selectedMapType}/${zoom}/${coord.x}/${coord.y}.png?appid=f2d74a34f19c8b461a1356213ca592fc`\r\n        },\r\n        tileSize: new google.maps.Size(256, 256),\r\n        maxZoom: 14,\r\n        minZoom: 0,\r\n        name: 'maptype',\r\n        opacity: .8\r\n      })\r\n\r\n      //overlaying map layers\r\n      this.map.overlayMapTypes.insertAt(0, mapType);\r\n      this.addMarker(center, this.map)\r\n    }\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.props.initialCenter;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n  addMarker = (location, map) => {\r\n    const { google } = this.props;\r\n    const marker = new google.maps.Marker({\r\n      position: location,\r\n      map: map\r\n    });\r\n    const infowindow = new google.maps.InfoWindow({\r\n      content: this.context.state.city.toUpperCase()\r\n    })\r\n    marker.addListener('click', function () {\r\n      infowindow.open(map, marker);\r\n    });\r\n    infowindow.open(map, marker);\r\n    return marker\r\n  }\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n    if (!children) return;\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.props.initialCenter\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n    return (\r\n      <>\r\n        <div style={style} ref=\"map\">\r\n\r\n        </div>\r\n        {this.renderChildren()}\r\n      </>\r\n\r\n    );\r\n  }\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  initialCenter: {\r\n    lat: -1.2884,\r\n    lng: 36.8233\r\n  },\r\n  zoom: 3,\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst MapTileButton = (props) => {\r\n    return (<button id={props.itemId} onClick={(e) => props.handleClick(e)} className=\"mapTileButton\">\r\n        {props.buttonText.slice(0, -4)}\r\n    </button>);\r\n}\r\n\r\nexport default MapTileButton;","import React, { Component } from 'react';\r\n\r\nclass MapTileMenu extends Component {\r\n    state = {\r\n        isVisible: false,\r\n        isChecked: false,\r\n    }\r\n\r\n\r\n    handleChecked = () => {\r\n        let checked = this.state.isChecked;\r\n        this.setState({ isChecked: !checked });\r\n    }\r\n\r\n    handleChange = () => {\r\n        let visible = this.state.isVisible;\r\n        this.setState({ isVisible: !visible });\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <label onClick={this.handleChecked} htmlFor=\"mapTileMenu\"><button className=\"mapTileButton mapTileButton--menu\">Menu</button></label>\r\n                <input onChange={this.handleChange} checked={this.state.isChecked} type='checkbox' id=\"mapTileMenu\" />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapTileMenu;","import React, { Component } from 'react';\r\nimport { GoogleApiWrapper } from 'google-maps-react';\r\nimport { CurrentLocation } from '../components/Map';\r\nimport MapTileButton from './MapTileButton';\r\nimport MapTileMenu from './MapTileMenu';\r\nimport '../styles/WeatherMap.scss';\r\n\r\n\r\n\r\n\r\n\r\nclass WeatherMap extends Component {\r\n\r\n    state = {\r\n        currentCords: {\r\n            lat: this.props.data.coord.lat,\r\n            lng: this.props.data.coord.lon\r\n        },\r\n        mapType: 'clouds_new',\r\n        menu: false,\r\n    }\r\n\r\n    //map types available in OWM free user plan\r\n    mapTypes = [\r\n        'clouds_new', 'precipitation_new', 'pressure_new', 'wind_new', 'temp_new'\r\n    ]\r\n\r\n    data = this.props.data;\r\n\r\n    handleMapTypeChange = (e) => {\r\n        this.setState({ mapType: e.target.id });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.data ? <div className=\"WeatherMap\">\r\n                <div className=\"mapTileButtons\">\r\n                    <MapTileMenu />\r\n                    {this.mapTypes.map((mapType) => (\r\n                        <MapTileButton handleClick={this.handleMapTypeChange} buttonText={mapType} itemId={mapType} key={mapType} />\r\n                    ))}\r\n                </div>\r\n                <CurrentLocation centerAroundCurrentLocation\r\n                    data={this.data}\r\n                    google={this.props.google}\r\n                    zoom={5}\r\n\r\n                    initialCenter={{\r\n                        lat: this.props.data.coord.lat,\r\n                        lng: this.props.data.coord.lon\r\n                    }}\r\n                    selectedMapType={this.state.mapType}\r\n                >\r\n\r\n                </CurrentLocation>\r\n\r\n            </div>\r\n                : null\r\n        );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({ apiKey: 'AIzaSyC-XxeMWv2Jalaw7y0MGK52T8S7mJtf3bg' })(WeatherMap);\r\n","import React, { Component } from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport WeatherMap from '../components/WeatherMap'\r\nimport '../styles/WeatherMap.scss';\r\n\r\n\r\nclass MapPage extends Component {\r\n\r\n    static contextType = AppContext;\r\n\r\n    state = {\r\n        data: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.data === this.state.data) {\r\n            this.fetchData();\r\n            console.log('condition works')\r\n\r\n        }\r\n    }\r\n\r\n    fetchData = async () => {\r\n        let value = this.context;\r\n        let API = `https://api.openweathermap.org/data/2.5/weather?q=${value.state.city}&appid=f2d74a34f19c8b461a1356213ca592fc`;\r\n\r\n        fetch(API)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw Error(response.statusText)\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(data => this.setState({ data: data }))\r\n            .catch(() => alert('Invalid city name'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mapPage\">\r\n                <h1 data-aos=\"fade-right\" data-aos-delay=\"500\" data-aos-easing=\"ease-in-sine\" className=\"page__title\">Weather map for {this.context.state.city}</h1>\r\n                <h3>See the map of clouds, rainy areas and more!</h3>\r\n                {this.state.data ? <WeatherMap data={this.state.data} /> : null}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default MapPage;","import React from 'react';\r\nimport { AppContext } from '../context/AppProvider';\r\n\r\nconst WeatherAlerts = () => {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(context) => (\r\n                <div className=\"WeatherAlerts\">\r\n                    weather alerts\r\n                </div>\r\n            )\r\n            }\r\n        </AppContext.Consumer >\r\n    )\r\n}\r\n\r\nexport default WeatherAlerts;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { AppContext } from '../context/AppProvider';\r\nimport ForecastPage from '../pages/ForecastPage';\r\nimport WeatherPage from '../pages/WeatherPage';\r\nimport UVIndex from '../pages/UVIndex';\r\nimport MapPage from '../pages/MapPage';\r\nimport WeatherAlerts from '../pages/WeatherAlerts';\r\nimport SearchBar from '../components/SearchBar';\r\nimport '../styles/Page.scss';\r\n\r\nexport default class Page extends Component {\r\n\r\n    static contextType = AppContext;\r\n\r\n    state = {\r\n        currentPage: document.location.pathname\r\n    }\r\n\r\n    routes = [\r\n        {\r\n            path: \"/\",\r\n            component: WeatherPage,\r\n        },\r\n        {\r\n            path: \"/WeatherPage\",\r\n            component: WeatherPage,\r\n        },\r\n        {\r\n            path: \"/ForecastPage\",\r\n            component: ForecastPage,\r\n        },\r\n        {\r\n            path: \"/UVIndex\",\r\n            component: UVIndex,\r\n        },\r\n        {\r\n            path: \"/MapPage\",\r\n            component: MapPage,\r\n        },\r\n        {\r\n            path: \"/WeatherAlerts\",\r\n            component: WeatherAlerts,\r\n        }\r\n    ];\r\n\r\n    render() {\r\n        if (this.context.state.city) {\r\n            return (\r\n                <div className=\"page\">\r\n                    {this.context.state.city ? <Switch>\r\n                        {this.routes.map(({ path, component: C }) => (\r\n                            <Route key={C} path={path} exact render={(props) => (\r\n                                <C {...props} />\r\n                            )\r\n                            } />\r\n                        ))}\r\n                    </Switch> : 'select the city'}\r\n                </div>\r\n            )\r\n        } else return (\r\n            <div className=\"defaultPage\">\r\n                <div className=\"defaultPage__content\">\r\n                    <h1 className=\"defaultPage__title\">Where do you want to check the weather?</h1>\r\n                    <SearchBar />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (<div className=\"footer\">Designed and coded by: <span className=\"footer__span\">L. Rozwadowski</span></div>);\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../styles/App.scss';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Navigation from './Navigation';\r\nimport Header from './Header';\r\nimport Page from './Page';\r\nimport Footer from './Footer';\r\nimport { AppProvider } from '../context/AppProvider';\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <AppProvider>\r\n          <Router>\r\n            <div className=\"container\">\r\n              <header className=\"headerLayout\">\r\n                <nav><Navigation /></nav>\r\n                <Header />\r\n              </header>\r\n              <main className=\"mainLayout\">\r\n                <Page />\r\n              </main>\r\n              <footer>\r\n                <Footer />\r\n              </footer>\r\n            </div>\r\n          </Router>\r\n        </AppProvider>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './layout/App';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\nimport './styles/breakpoints.scss';\r\nAOS.init();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}